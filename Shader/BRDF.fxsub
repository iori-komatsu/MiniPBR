#ifndef SHADER_BRDF_INCLUDED
#define SHADER_BRDF_INCLUDED

#include <Shader/Math.fxsub>

// Half-Lambert diffuse
float3 HalfLambertDiffuse(float dotNL, float3 albedo) {
	const float invZ = 3.0 / (4.0 * PI);
	float c = dotNL * 0.5 + 0.5;
	return invZ * c * c * albedo;
}

// Blinn-Phong specular
float3 BlinnPhongSpecular(float dotNH, float3 reflectance, float power) {
	float invZ = (power + 2.0) * (power + 4.0)
               / (8.0 * PI * (exp2(-0.5 * power) + power));
	return invZ * reflectance * pow(max(0, dotNH), power);
}

#endif
