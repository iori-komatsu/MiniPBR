#ifndef SHADER_PARAMETER_GEOMETRY_INCLUDED
#define SHADER_PARAMETER_GEOMETRY_INCLUDED

#include <Shader/ColorSpace.fxsub>

// 座法変換
float4x4 WorldViewProjMatrix      : WORLDVIEWPROJECTION;
float4x4 WorldMatrix              : WORLD;
float4x4 ViewMatrix               : VIEW;
float4x4 ProjectionMatrix         : PROJECTION;
float4x4 LightWorldViewProjMatrix : WORLDVIEWPROJECTION < string Object = "Light"; >;

// カメラ
float3 CameraPos : POSITION < string Object = "Camera"; >;
static float3 CameraDir = normalize(ViewMatrix._13_23_33 / ProjectionMatrix._33);

// マテリアル
float3 MaterialAmbient  : AMBIENT       < string Object = "Geometry"; >;
float4 MaterialDiffuse  : DIFFUSE       < string Object = "Geometry"; >;
float3 MaterialSpecular : SPECULAR      < string Object = "Geometry"; >;
float  SpecularPower    : SPECULARPOWER < string Object = "Geometry"; >;

// ライト
float3 LightDir      : DIRECTION < string Object = "Light"; >;
float3 LightSpecular : SPECULAR  < string Object = "Light"; >;
// LightDiffuse と LightAmbient は UI で設定した値とは違う値になっている場合があるので
// LightSpecular によって光の色を設定する。
static float3 LightColor = srgb2linear(LightSpecular);

// テクスチャ材質モーフ値
float4 TextureAddValue : ADDINGTEXTURE;
float4 TextureMulValue : MULTIPLYINGTEXTURE;

#endif
